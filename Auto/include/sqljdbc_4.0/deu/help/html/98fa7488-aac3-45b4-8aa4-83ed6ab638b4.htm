<html xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:MSHelp="http://msdn.microsoft.com/mshelp"
	xmlns:mshelp="http://msdn.microsoft.com/mshelp"
	xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5"
	xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
<META NAME="save" CONTENT="history" />
<title>Grundlegendes zu Datentypkonvertierungen</title>
<meta name="Language" content="de-de" />
<meta name="System.Keywords" content="Datentypkonvertierungen" />
<meta name="Microsoft.Help.Id"
	content="98fa7488-aac3-45b4-8aa4-83ed6ab638b4" />
<meta name="Description"
	content="Um eine Konvertierung der Datentypen der Programmiersprache Java in SQL Server-Datentypen zu ermöglichen, stellt Microsoft JDBC Driver für SQL Server die erforderlichen Datentypkonvertierungen gemäß der JDBC-Spezifikation bereit." />
<meta name="Microsoft.Help.ContentType" content="Concepts" />
<link rel="stylesheet" type="text/css" href="../local/Classic.css" />
<script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script>
</head>
<body>
	<div id="header">
		<table id="bottomTable" cellpadding="0" cellspacing="0">
			<tr>
				<td align="left"><span id="headerBold">Grundlegendes zu
						Datentypkonvertierungen</span></td>
			</tr>
		</table>
		<table id="gradientTable">
			<tr>
				<td class="nsrBottom" background="../icons/gradient.gif" />
			</tr>
		</table>
	</div>
	<div id="mainSection">
		<div id="mainBody">
			<div class="introduction">
				<p>
					Um eine Konvertierung der Datentypen der Programmiersprache Java in
					SQL Server-Datentypen zu ermöglichen, stellt Microsoft JDBC Driver
					für SQL Server die erforderlichen Datentypkonvertierungen gemäß der
					JDBC-Spezifikation bereit. Alle Typen können in die und aus den
					Datentypen <span sdata="langKeyword" value="Object"><span
						class="keyword">Object</span></span>, <span sdata="langKeyword"
						value="String"><span class="keyword">String</span></span> und <span
						sdata="langKeyword" value="byte[]"><span class="keyword">byte[]</span></span>
					konvertiert werden, um mehr Flexibilität bereitzustellen.
				</p>
			</div>
			<h1 class="heading">Konvertierungen für Abrufmethoden</h1>
			<div id="sectionSection0" class="section" name="collapseableSection"
				style="">
				<p>
					Das folgende Diagramm enthält auf Grundlage der SQL
					Server-Datentypen das Konvertierungsschema des JDBC-Treibers für
					die <b>get&lt;Type&gt;()</b>-Methoden der <a
						href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Klasse
					und die unterstützten Konvertierungen für die <b>get&lt;Type&gt;</b>-Methoden
					der <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>-Klasse.
				</p>
				<img alt="JDBCGetterConversions"
					src="../art/JDBCGetterConversions.gif" />
				<p>Von den Abrufmethoden des JDBC-Treibers werden drei
					Konvertierungskategorien unterstützt:</p>
				<ul>
					<li><p>
							<span class="label">Non-Lossy (x)</span>: Konvertierungen für
							Fälle, in denen der Abruftyp maximal dem zugrunde liegenden
							Servertyp entspricht. Beim Aufruf von <b>getBigDecimal</b> für
							eine zugrunde liegende dezimale Serverspalte ist beispielsweise
							keine Konvertierung erforderlich.
						</p></li>
					<li><p>
							<span class="label">Converted (y)</span>: Konvertierungen von
							numerischen Servertypen zu Java-Typen, bei denen die
							Konvertierung entsprechend den Konvertierungsregeln von Java
							erfolgt. Bei diesen Konvertierungen wird die Genauigkeit gekürzt
							(niemals gerundet), und der Überlauf wird als Modulo des Zieltyps
							behandelt, der kleiner ist. Beim Aufruf von <b>getInt</b> für
							eine zugrunde liegende <span sdata="langKeyword" value="decimal"><span
								class="keyword">decimal</span></span>-Spalte mit dem Wert "1,9999" wird
							der Wert "1" zurückgegeben. Beim zugrunde liegenden <span
								sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span>-Wert
							"3000000000" beträgt der Überlauf des <span sdata="langKeyword"
								value="int"><span class="keyword">int</span></span>-Werts
							"-1294967296".
						</p></li>
					<li><p>
							<span class="label">Data Dependent (z)</span>: Bei
							Konvertierungen von zugrunde liegenden Datentypen in numerische
							Typen müssen die Zeichentypen Werte enthalten, die in den
							betreffenden Typ konvertiert werden können. Andere
							Konvertierungen werden nicht ausgeführt. Werte, die für den
							Abruftyp zu groß sind, sind ungültig. Beim Aufruf von <b>getInt</b>
							für eine varchar(50)-Spalte, die "53" enthält, wird
							beispielsweise der Wert als <span sdata="langKeyword" value="int"><span
								class="keyword">int</span></span> zurückgegeben. Bei einem zugrunde
							liegenden Wert von "xyz" oder "3000000000" wird ein Fehler
							ausgegeben.
						</p></li>
				</ul>
				<p>
					Wenn <b>getString</b> für einen Spaltendatentyp <span
						sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>,
					<span sdata="langKeyword" value="varbinary"><span
						class="keyword">varbinary</span></span>, <span sdata="langKeyword"
						value="varbinary(max)"><span class="keyword">varbinary(max)</span></span>
					oder <span sdata="langKeyword" value="image"><span
						class="keyword">image</span></span> aufgerufen wird, wird der Wert als
					hexadezimaler Zeichenfolgenwert zurückgegeben.
				</p>
			</div>
			<h1 class="heading">Konvertierungen für Updatemethoden</h1>
			<div id="sectionSection1" class="section" name="collapseableSection"
				style="">
				<p>
					Für die Java-Typdaten, die an die <b>update&lt;Type&gt;()</b>-Methoden
					der <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Klasse
					übergeben werden, gelten die folgenden Konvertierungen.
				</p>
				<img alt="JDBCUpdaterConversions"
					src="../art/JDBC_JDBCUpdatterConversions.gif" />
				<p>Von den Updatemethoden des JDBC-Treibers werden drei
					Konvertierungskategorien unterstützt:</p>
				<ul>
					<li><p>
							<span class="label">Non-Lossy (x)</span>: Konvertierungen für
							Fälle, in denen der Aktualisierungstyp maximal dem zugrunde
							liegenden Servertyp entspricht. Beim Aufruf von <b>updateBigDecimal</b>
							für eine zugrunde liegende dezimale Serverspalte ist
							beispielsweise keine Konvertierung erforderlich.
						</p></li>
					<li><p>
							<span class="label">Converted (y)</span>: Konvertierungen von
							numerischen Servertypen zu Java-Typen, bei denen die
							Konvertierung entsprechend den Konvertierungsregeln von Java
							erfolgt. Bei diesen Konvertierungen wird die Genauigkeit gekürzt
							(niemals gerundet), und der Überlauf wird als Modulo des
							(kleineren) Zieltyps behandelt. Beim Aufruf von <b>updateDecimal</b>
							für eine zugrunde liegende <span sdata="langKeyword" value="int"><span
								class="keyword">int</span></span>-Spalte mit dem Wert "1,9999" wird der
							Wert "1" zurückgegeben. Beim zugrunde liegenden <span
								sdata="langKeyword" value="decimal"><span class="keyword">decimal</span></span>-Wert
							"3000000000" beträgt der Überlauf des <span sdata="langKeyword"
								value="int"><span class="keyword">int</span></span>-Werts
							"-1294967296".
						</p></li>
					<li><p>
							<span class="label">Data Dependent (z)</span>: Bei
							Konvertierungen von zugrunde liegenden Quelldatentypen zu
							Zieldatentypen müssen die enthaltenen Werte zu den Zieltypen
							konvertiert werden können. Andere Konvertierungen werden nicht
							ausgeführt. Werte, die für den Abruftyp zu groß sind, sind
							ungültig. Beispielsweise wird das Update bei einem Aufruf von <b>updateString</b>
							für eine int-Spalte, die "53" enthält, erfolgreich ausgeführt.
							Bei einem zugrunde liegenden String-Wert von "foo" oder
							"3000000000" wird ein Fehler ausgelöst.
						</p></li>
				</ul>
				<p>
					Wenn <b>updateString</b> für einen Spaltendatentyp <span
						sdata="langKeyword" value="binary"><span class="keyword">binary</span></span>,
					<span sdata="langKeyword" value="varbinary"><span
						class="keyword">varbinary</span></span>, <span sdata="langKeyword"
						value="varbinary(max)"><span class="keyword">varbinary(max)</span></span>
					oder <span sdata="langKeyword" value="image"><span
						class="keyword">image</span></span> aufgerufen wird, wird der String-Wert
					als hexadezimaler Zeichenfolgenwert behandelt.
				</p>
				<p>
					Wenn der Datentyp der SQL Server-Spalte <span sdata="langKeyword"
						value="XML"><span class="keyword">XML</span></span> ist, muss der
					Datenwert gültiges <span sdata="langKeyword" value="XML"><span
						class="keyword">XML</span></span> sein. Beim Aufrufen der Methoden <b>updateBytes</b>,
					<b>updateBinaryStream</b> oder <b>updateBlob</b> sollte der
					Datenwert die hexadezimale Zeichenfolgendarstellung der XML-Zeichen
					sein. Beispiel:
				</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span>
				</div>
				<p>Beachten Sie, dass eine Bytereihenfolge-Marke (BOM)
					erforderlich ist, wenn die XML-Zeichen in einer bestimmten
					Zeichencodierung vorliegen.</p>
			</div>
			<h1 class="heading">Konvertierungen für Festlegungsmethoden</h1>
			<div id="sectionSection2" class="section" name="collapseableSection"
				style="">
				<p>
					Für die Java-Typdaten, die an die <b>set&lt;Type&gt;()</b>-Methoden
					der <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a>-Klasse
					und der <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>-Klasse
					übergeben werden, gelten die folgenden Konvertierungen.
				</p>
				<img alt="JDBCSetterConversions"
					src="../art/JDBC_JDBCSetterConversions_v2.gif" />
				<p>Der Server versucht alle Konvertierungen und gibt bei Fehlern
					eine Fehlermeldung zurück.</p>
				<p>
					Wenn der Wert eines <span sdata="langKeyword" value="String"><span
						class="keyword">String</span></span>-Datentyps die Länge von <span
						sdata="langKeyword" value="VARCHAR"><span class="keyword">VARCHAR</span></span>
					überschreitet, wird er <span sdata="langKeyword"
						value="LONGVARCHAR"><span class="keyword">LONGVARCHAR</span></span>
					zugeordnet. Entsprechend wird ein <span sdata="langKeyword"
						value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>,
					dessen Wert die Länge von <span sdata="langKeyword"
						value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>
					überschreitet, <span sdata="langKeyword" value="LONGNVARCHAR"><span
						class="keyword">LONGNVARCHAR</span></span> zugeordnet. Gleiches gilt für
					<span sdata="langKeyword" value="byte[]"><span
						class="keyword">byte[]</span></span>. Werte, die länger als <span
						sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span>
					sind, werden in <span sdata="langKeyword" value="LONGVARBINARY"><span
						class="keyword">LONGVARBINARY</span></span> konvertiert.
				</p>
				<p>Von den Festlegungsmethoden des JDBC-Treibers werden zwei
					Konvertierungskategorien unterstützt:</p>
				<ul>
					<li><p>
							<span class="label">Non-Lossy (x)</span>: Konvertierungen für
							numerische Fälle, in denen der Festlegungstyp maximal dem
							zugrunde liegenden Servertyp entspricht. Beim Aufruf von <b>setBigDecimal</b>
							für eine zugrunde liegende <span sdata="langKeyword"
								value="decimal"><span class="keyword">decimal</span></span>-Serverspalte
							ist beispielsweise keine Konvertierung erforderlich. Bei der
							Umwandlung von numerischen Typen in Zeichentypen wird der
							Java-Datentyp <span sdata="langKeyword" value="numeric"><span
								class="keyword">numeric</span></span> in <span sdata="langKeyword"
								value="String"><span class="keyword">String</span></span>
							konvertiert. Beim Aufruf von <b>setDouble</b> für eine
							varchar(50)-Spalte mit dem Wert "53" wird beispielsweise in der
							betreffenden Zielspalte der Zeichenwert "53" erzeugt.
						</p></li>
					<li><p>
							<span class="label">Converted (y)</span>: Konvertierungen eines <span
								sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span>-Java-Typs
							in einen zugrunde liegenden <span sdata="langKeyword"
								value="numeric"><span class="keyword">numeric</span></span>-Servertyp,
							der kleiner ist. Diese Konvertierung ist regulär und erfolgt
							entsprechend den SQL Server-Konvertierungskonventionen. Die
							Genauigkeit wird immer gekürzt (niemals gerundet). Bei einem
							Überlauf wird der Fehler ausgegeben, dass die Konvertierung nicht
							unterstützt wird. Beispielsweise führt <b>updateDecimal</b> mit
							einem Wert von "1,9999" für eine zugrunde liegende integer-Spalte
							zu einer "1" in der Zielspalte. Bei Übergabe von "3000000000"
							löst der Treiber jedoch einen Fehler aus.
						</p></li>
					<li><p>
							<span class="label">Data Dependent (z)</span>: Konvertierungen
							von einem <span sdata="langKeyword" value="String"><span
								class="keyword">String</span></span>-Java-Typ in den zugrunde liegenden
							SQL Server-Datentyp unterliegen den folgenden Bedingungen: Der <span
								sdata="langKeyword" value="String"><span class="keyword">String</span></span>-Wert
							wird vom Treiber an SQL Server gesendet, und die Konvertierungen
							werden von SQL Server ausgeführt, sofern erforderlich. Wenn <b>sendStringParametersAsUnicode</b>
							auf "true" festgelegt ist und der zugrunde liegende SQL
							Server-Datentyp <span sdata="langKeyword" value="image"><span
								class="keyword">image</span></span> ist, lässt SQL Server keine
							Konvertierung von <span sdata="langKeyword" value="nvarchar"><span
								class="keyword">nvarchar</span></span> in <span sdata="langKeyword"
								value="image"><span class="keyword">image</span></span> zu und
							löst eine <b>SQLServerException</b> aus. Wenn
							sendStringParametersAsUnicode auf "false" festgelegt und der
							zugrunde liegende SQL Server-Datentyp <span sdata="langKeyword"
								value="image"><span class="keyword">image</span></span> ist,
							lässt SQL Server die Konvertierung von <span sdata="langKeyword"
								value="varchar"><span class="keyword">varchar</span></span> in <span
								sdata="langKeyword" value="image"><span class="keyword">image</span></span>
							zu, und es wird keine Ausnahme ausgelöst.
						</p></li>
				</ul>
				<p>SQL Server führt die Konvertierungen aus und übergibt Fehler
					bei Problemen wieder an den JDBC-Treiber.</p>
				<p>
					Wenn der Datentyp der SQL Server-Spalte <span sdata="langKeyword"
						value="XML"><span class="keyword">XML</span></span> ist, muss der
					Datenwert gültiges <span sdata="langKeyword" value="XML"><span
						class="keyword">XML</span></span> sein. Beim Aufrufen der Methoden <b>updateBytes</b>,
					<b>updateBinaryStream</b> oder <b>updateBlob</b> sollte der
					Datenwert die hexadezimale Zeichenfolgendarstellung der XML-Zeichen
					sein. Beispiel:
				</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span>
				</div>
				<p>Beachten Sie, dass eine Bytereihenfolge-Marke (BOM)
					erforderlich ist, wenn die XML-Zeichen in einer bestimmten
					Zeichencodierung vorliegen.</p>
			</div>
			<h1 class="heading">Konvertierungen für setObject</h1>
			<div id="sectionSection3" class="section" name="collapseableSection"
				style="">
				<p>
					Für die Java-Typdaten, die an die <b>setObject(&lt;Type&gt;)</b>-Methoden
					der <a href="a8481c06-fbba-432b-8c69-4f4619c20ad4.htm">SQLServerPreparedStatement</a>-Klasse
					übergeben werden, gelten die folgenden Konvertierungen.
				</p>
				<img alt="JDBCSetObjectConversions"
					src="../art/JDBC_JDBCSetObjectConversions.gif" />
				<p>
					Die <b>setObject</b>-Methode ohne Angabe eines Zieltyps verwendet
					die Standardzuordnung. Wenn der Wert eines <span
						sdata="langKeyword" value="String"><span class="keyword">String</span></span>-Datentyps
					die Länge von <span sdata="langKeyword" value="VARCHAR"><span
						class="keyword">VARCHAR</span></span> überschreitet, wird er <span
						sdata="langKeyword" value="LONGVARCHAR"><span
						class="keyword">LONGVARCHAR</span></span> zugeordnet. Entsprechend wird
					ein <span sdata="langKeyword" value="NVARCHAR"><span
						class="keyword">NVARCHAR</span></span>, dessen Wert die Länge von <span
						sdata="langKeyword" value="NVARCHAR"><span class="keyword">NVARCHAR</span></span>
					überschreitet, <span sdata="langKeyword" value="LONGNVARCHAR"><span
						class="keyword">LONGNVARCHAR</span></span> zugeordnet. Gleiches gilt für
					<span sdata="langKeyword" value="byte[]"><span
						class="keyword">byte[]</span></span>. Werte, die länger als <span
						sdata="langKeyword" value="VARBINARY"><span class="keyword">VARBINARY</span></span>
					sind, werden in <span sdata="langKeyword" value="LONGVARBINARY"><span
						class="keyword">LONGVARBINARY</span></span> konvertiert.
				</p>
				<p>Von den setObject-Methoden des JDBC-Treibers werden drei
					Konvertierungskategorien unterstützt:</p>
				<ul>
					<li><p>
							<span class="label">Non-Lossy (x)</span>: Konvertierungen für
							numerische Fälle, in denen der Festlegungstyp maximal dem
							zugrunde liegenden Servertyp entspricht. Beim Aufruf von <b>setBigDecimal</b>
							für eine zugrunde liegende <span sdata="langKeyword"
								value="decimal"><span class="keyword">decimal</span></span>-Serverspalte
							ist beispielsweise keine Konvertierung erforderlich. Bei der
							Umwandlung von numerischen Typen in Zeichentypen wird der
							Java-Datentyp <span sdata="langKeyword" value="numeric"><span
								class="keyword">numeric</span></span> in <span sdata="langKeyword"
								value="String"><span class="keyword">String</span></span>
							konvertiert. Beim Aufruf von <b>setDouble</b> für eine
							varchar(50)-Spalte mit dem Wert "53" wird beispielsweise in der
							betreffenden Zielspalte der Zeichenwert "53" erzeugt.
						</p></li>
					<li><p>
							<span class="label">Converted (y)</span>: Konvertierungen eines <span
								sdata="langKeyword" value="numeric"><span class="keyword">numeric</span></span>-Java-Typs
							in einen zugrunde liegenden <span sdata="langKeyword"
								value="numeric"><span class="keyword">numeric</span></span>-Servertyp,
							der kleiner ist. Diese Konvertierung ist regulär und erfolgt
							entsprechend den SQL Server-Konvertierungskonventionen. Die
							Genauigkeit wird immer gekürzt (niemals gerundet). Bei einem
							Überlauf wird der Fehler ausgegeben, dass die Konvertierung nicht
							unterstützt wird. Beispielsweise führt <b>updateDecimal</b> mit
							einem Wert von "1,9999" für eine zugrunde liegende integer-Spalte
							zu einer "1" in der Zielspalte. Bei Übergabe von "3000000000"
							löst der Treiber jedoch einen Fehler aus.
						</p></li>
					<li><p>
							<span class="label">Data Dependent (z)</span>: Konvertierungen
							von einem <span sdata="langKeyword" value="String"><span
								class="keyword">String</span></span>-Java-Typ in den zugrunde liegenden
							SQL Server-Datentyp unterliegen den folgenden Bedingungen: Der <span
								sdata="langKeyword" value="String"><span class="keyword">String</span></span>-Wert
							wird vom Treiber an SQL Server gesendet, und die Konvertierungen
							werden von SQL Server ausgeführt, sofern erforderlich. Wenn die
							Verbindungseigenschaft <b>sendStringParametersAsUnicode</b> auf
							"true" festgelegt ist und der zugrunde liegende SQL
							Server-Datentyp <span sdata="langKeyword" value="image"><span
								class="keyword">image</span></span> ist, lässt SQL Server keine
							Konvertierung von <span sdata="langKeyword" value="nvarchar"><span
								class="keyword">nvarchar</span></span> in <span sdata="langKeyword"
								value="image"><span class="keyword">image</span></span> zu und
							löst eine SQLServerException aus. Wenn <b>sendStringParametersAsUnicode</b>
							auf "false" festgelegt und der zugrunde liegende SQL
							Server-Datentyp <span sdata="langKeyword" value="image"><span
								class="keyword">image</span></span> ist, lässt SQL Server die
							Konvertierung von <span sdata="langKeyword" value="varchar"><span
								class="keyword">varchar</span></span> in <span sdata="langKeyword"
								value="image"><span class="keyword">image</span></span> zu, und
							es wird keine Ausnahme ausgelöst.
						</p></li>
				</ul>
				<p>
					SQL Server führt den Großteil der Festlegungskonvertierungen aus
					und gibt bei Problemen Fehler an den JDBC-Treiber zurück.
					Clientseitige Konvertierungen sind die Ausnahme und werden nur bei
					<span sdata="langKeyword" value="date"><span class="keyword">date</span></span>-,
					<span sdata="langKeyword" value="time"><span class="keyword">time</span></span>-,
					<span sdata="langKeyword" value="timestamp"><span
						class="keyword">timestamp</span></span>-, <span sdata="langKeyword"
						value="Boolean"><span class="keyword">Boolean</span></span>- und <span
						sdata="langKeyword" value="String"><span class="keyword">String</span></span>-Werten
					ausgeführt.
				</p>
				<p>
					Wenn der Datentyp der SQL Server-Spalte <span sdata="langKeyword"
						value="XML"><span class="keyword">XML</span></span> ist, muss der
					Datenwert gültiges <span sdata="langKeyword" value="XML"><span
						class="keyword">XML</span></span> sein. Beim Aufrufen der Methoden
					setObject(byte[], SQLXML), setObject(inputStream, SQLXML) oder
					setObject(Blob, SQLXML) sollte der Datenwert die hexadezimale
					Zeichenfolgendarstellung der XML-Zeichen sein. Beispiel:
				</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>&lt;hello&gt;world&lt;/hello&gt; = 0x3C68656C6C6F3E776F726C643C2F68656C6C6F3E </pre></span>
				</div>
				<p>Beachten Sie, dass eine Bytereihenfolge-Marke (BOM)
					erforderlich ist, wenn die XML-Zeichen in einer bestimmten
					Zeichencodierung vorliegen.</p>
			</div>
			<span id="seeAlsoSpan"><h1 class="heading">Siehe auch</h1></span>
			<div id="seeAlsoSection" class="section" name="collapseableSection"
				style="">
				<div class="seeAlsoStyle">
					<span sdata="link"><a
						href="7802328d-4d23-4775-9573-4169b127d258.htm">Grundlegendes
							zu den Datentypen in JDBC Driver</a></span>
				</div>
			</div>
		</div>
		<div id="footer" class="section">
			<span id="feedbackarea">Senden Sie Microsoft <a
				href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dVielen%20Dank%20für%20Ihr%20Feedback.%20Die%20Autorenteams%20im%20Bereich%20Entwicklung%20nutzen%20Ihr%20Feedback,%20um%20die%20Dokumentation%20zu%20verbessern.%20Im%20Rahmen%20der%20Überprüfung%20Ihres%20Feedbacks%20erhalten%20Sie%20von%20uns%20ggf.%20eine%20E-Mail%20mit%20Rückfragen%20oder%20Feedback%20zur%20möglichen%20Lösung.%20Ihre%20E-Mail-Adresse%20wird%20von%20uns%20nicht%20zu%20anderen%20Zwecken%20verwendet%20und%20wird%20gelöscht,%20sobald%20die%20Überprüfung%20Ihres%20Feedbacks%20abgeschlossen%20ist.%0\AWeitere%20Informationen%20zu%20den%20Datenschutzrichtlinien%20von%20Microsoft%20finden%20Sie%20unter%20http://privacy.microsoft.com/de-de/default.aspx.%0\A%0\d','Kundenfeedback');">Feedback</a>
				zu diesem Thema.
			</span><span id="copyrightarea"><p>
					<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012
						Microsoft. Alle Rechte vorbehalten.</a>
				</p></span>
		</div>
	</div>
</body>
</html>