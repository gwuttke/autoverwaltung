<html xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:MSHelp="http://msdn.microsoft.com/mshelp"
	xmlns:mshelp="http://msdn.microsoft.com/mshelp"
	xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5"
	xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
<META NAME="save" CONTENT="history" />
<title>Verwenden der adaptiven Pufferung</title>
<meta name="Language" content="de-de" />
<meta name="System.Keywords" content="adaptiv" />
<meta name="System.Keywords" content="adaptive Pufferung" />
<meta name="System.Keywords" content="isWrapperFor" />
<meta name="System.Keywords" content="selectMethod" />
<meta name="System.Keywords" content="unwrap" />
<meta name="Microsoft.Help.Id"
	content="92d4e3be-c3e9-4732-9a60-b57f4d0f7cb7" />
<meta name="Description"
	content="Mit der adaptiven Pufferung können Daten mit großen Werten ohne den Aufwand von Servercursorn abgerufen werden." />
<meta name="Microsoft.Help.ContentType" content="Concepts" />
<link rel="stylesheet" type="text/css" href="../local/Classic.css" />
<script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script>
</head>
<body>
	<div id="header">
		<table id="bottomTable" cellpadding="0" cellspacing="0">
			<tr>
				<td align="left"><span id="headerBold">Verwenden der
						adaptiven Pufferung</span></td>
			</tr>
		</table>
		<table id="gradientTable">
			<tr>
				<td class="nsrBottom" background="../icons/gradient.gif" />
			</tr>
		</table>
	</div>
	<div id="mainSection">
		<div id="mainBody">
			<div class="introduction">
				<p>Mit der adaptiven Pufferung können Daten mit großen Werten
					ohne den Aufwand von Servercursorn abgerufen werden. In Anwendungen
					kann die Funktion der adaptiven Pufferung mit allen Versionen von
					SQL Server verwendet werden, die vom Treiber unterstützt werden.</p>
				<p>
					Wenn Microsoft JDBC Driver für SQL Server eine Abfrage ausführt,
					ruft der Treiber normalerweise alle Ergebnisse vom Server in einen
					Anwendungsspeicher ab. Obwohl bei diesem Ansatz die
					Ressourcenauslastung für SQL Server reduziert wird, kann ein <b>OutOfMemoryError</b>
					in der JDBC-Anwendung für die Abfragen ausgelöst werden, bei denen
					sehr große Ergebnisse zurückgegeben werden.
				</p>
				<p>Damit Anwendungen sehr große Ergebnisse behandeln können,
					stellt Microsoft JDBC Driver für SQL Server die adaptive Pufferung
					bereit. Mithilfe der adaptiven Pufferung ruft der Treiber
					Ergebnisse der Anweisungsausführung erst dann von SQL Server ab,
					wenn sie in der Anwendung benötigt werden, statt alle Ergebnisse
					auf einmal abzurufen. Der Treiber verwirft außerdem die Ergebnisse,
					sobald die Anwendung nicht mehr auf sie zugreifen kann. Im
					Folgenden werden einige Szenarien beschrieben, in denen die
					Verwendung der adaptiven Pufferung sinnvoll sein kann:</p>
				<ul>
					<li><p>
							<b>Die Abfrage erzeugt ein sehr großes Resultset:</b> Die
							Anwendung kann eine SELECT-Anweisung ausführen, die mehr Zeilen
							zurückgibt als im Speicher der Anwendung gespeichert werden
							können. In vorherigen Versionen musste die Anwendung einen
							Servercursor verwenden, um einen <b>OutOfMemoryError</b> zu
							vermeiden. Die adaptive Pufferung stellt die Möglichkeit bereit,
							ein beliebig großes Resultset mit Vorwärtscursor und
							schreibgeschützt zu übergeben, ohne dass ein Servercursor
							erforderlich ist.
						</p></li>
					<li><p>
							<b>Die Abfrage erzeugt sehr große </b><a
								href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a><b>-Spalten
								oder </b><a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a><b>-OUT-Parameterwerte:</b>
							Die Anwendung kann einen Wert (Spalte oder OUT-Parameter)
							abrufen, der zu groß ist, um vollständig im Anwendungsspeicher
							gespeichert zu werden. Durch die adaptive Pufferung kann die
							Clientanwendung solche Werte als Datenstrom mithilfe der Methoden
							<b>getAsciiStream</b>, <b>getBinaryStream,</b> oder <b>getCharacterStream</b>
							abrufen. Die Anwendung ruft den Wert beim Lesen des Datenstroms
							von SQL Server ab.
						</p>
						<p /></li>
				</ul>
				<div style="margin: .5em 1.5em .5em 1.5em">
					<b></b>
					<p>Mit adaptiver Pufferung puffert der JDBC-Treiber nur die
						benötigte Datenmenge. Der Treiber stellt keine öffentliche Methode
						zum Steuern oder Beschränken der Puffergröße bereit.</p>
				</div>
			</div>
			<h1 class="heading">Festlegen der adaptiven Pufferung</h1>
			<div id="sectionSection0" class="section" name="collapseableSection"
				style="">
				<p>
					Ab Version 2.0 des JDBC-Treibers ist das Standardverhalten des
					Treibers "<span sdata="langKeyword" value="adaptive"><span
						class="keyword">adaptive</span></span>". Dies bedeutet, um das Verhalten
					der adaptiven Pufferung zu verwenden, muss das Verhalten der
					adaptiven Pufferung in der Anwendung nicht explizit angefordert
					werden. In Version 1.2 lautete der Puffermodus jedoch standardmäßig
					"<span sdata="langKeyword" value="full"><span
						class="keyword">full</span></span>", und die Anwendung musste den Modus
					für die adaptive Pufferung explizit anfordern.
				</p>
				<p>Es gibt drei Möglichkeiten, mit denen eine Anwendung die
					Verwendung der adaptiven Pufferung für die Anweisungsausführung
					anfordern kann:</p>
				<ul>
					<li><p>
							Die Anwendung kann die Verbindungseigenschaft <span
								sdata="langKeyword" value="responseBuffering"><span
								class="keyword">responseBuffering</span></span> auf "adaptive"
							festlegen. Weitere Informationen zum Festlegen der
							Verbindungseigenschaften finden Sie unter <span sdata="link"><a
								href="f1b62700-f046-488d-bd6b-a5cd8fc345b7.htm">Festlegen
									von Verbindungseigenschaften</a></span>.
						</p></li>
					<li><p>
							Die Anwendung kann die <a
								href="c9e43ff2-8117-4dca-982d-83c863d0c8e1.htm">setResponseBuffering</a>-Methode
							des <a href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a>-Objekts
							zum Festlegen des Antwortpufferungsmodus für alle Verbindungen
							verwenden, die mit diesem <a
								href="097434fd-2b74-411c-a5ed-eba04481dde5.htm">SQLServerDataSource</a>-Objekt
							erstellt wurden.
						</p></li>
					<li><p>
							Die Anwendung kann die <a
								href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a>-Methode
							der <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>-Klasse
							verwenden, um den Antwortpuffermodus für ein bestimmtes
							Anweisungsobjekt festzulegen.
						</p></li>
				</ul>
				<p>
					Bei Verwendung von JDBC Driver, Version 1.2, mussten Anwendungen
					das Anweisungsobjekt in <a
						href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>
					umwandeln, um die <a
						href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a>-Methode
					zu verwenden. Diese frühere Verwendungsweise wird in den
					Codebeispielen in <span sdata="link"><a
						href="6c986144-3854-4352-8331-e79eccbefc28.htm">Beispiel zum
							Lesen umfangreicher Daten</a></span> und <span sdata="link"><a
						href="58c76635-a117-4661-8781-d6cb231c5809.htm">Beispiel zum
							Lesen umfangreicher Daten mit gespeicherten Prozeduren</a></span>
					veranschaulicht.
				</p>
				<p>
					Mit Version 2.0 des JDBC-Treibers können Anwendungen jedoch die <a
						href="53f3291f-d43a-476b-a656-d86168dacf6c.htm">isWrapperFor</a>-Methode
					und die <a href="ce680176-ef04-4e44-bb6c-ec50bd06e7e6.htm">unwrap</a>-Methode
					verwenden, um auf die herstellerspezifischen Funktionen
					zuzugreifen, ohne Vermutungen über die Klassenhierarchie der
					Implementierung anstellen zu müssen. Beispielcode finden Sie im
					Thema <span sdata="link"><a
						href="76ecc05f-a77d-40a2-bab9-91a7fcf17347.htm">Beispiel zum
							Aktualisieren umfangreicher Daten</a></span>.
				</p>
			</div>
			<h1 class="heading">Abrufen umfangreicher Daten mit adaptiver
				Pufferung</h1>
			<div id="sectionSection1" class="section" name="collapseableSection"
				style="">
				<p>Wenn große Werte einmal mithilfe der
					get&lt;Typ&gt;Stream-Methoden gelesen werden und auf die
					ResultSet-Spalten und die CallableStatement-OUT-Parameter in der
					Reihenfolge zugegriffen wird, in der sie von SQL Server
					zurückgegeben werden, minimiert die adaptive Pufferung die
					Anwendungsspeicherauslastung beim Verarbeiten der Ergebnisse. Beim
					Verwenden der adaptiven Pufferung:</p>
				<ul>
					<li><p>
							Die in der <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Klasse
							und der <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>-Klasse
							definierten <b>get&lt;Type&gt;Stream</b>-Methoden geben
							schreibgeschützte Datenströme zurück, die zurückgesetzt werden
							können, wenn sie von der Anwendung gekennzeichnet werden. Wenn in
							der Anwendung <span class="code">reset</span> für den Datenstrom
							ausgeführt werden soll, muss zunächst die <span class="code">mark</span>-Methode
							für diesen Datenstrom aufgerufen werden.
						</p></li>
					<li><p>
							Die in der <a href="24170524-e1ab-4e80-8fd1-6688efacfbde.htm">SQLServerClob</a>-Klasse
							und der <a href="88bd8623-889d-4b5d-99ff-c85b32f3ff5c.htm">SQLServerBlob</a>-Klasse
							definierten <b>get&lt;Type&gt;Stream</b>-Methoden geben
							Datenströme zurück, die immer wieder an der Anfangsposition des
							Datenstroms positioniert werden können, ohne die <span
								class="code">mark</span>-Methode aufzurufen.
						</p></li>
				</ul>
				<p>
					Wenn die Anwendung adaptive Pufferung verwendet, können die von den
					<b>get&lt;Type&gt;Stream</b>-Methoden abgerufenen Werte nur einmal
					abgerufen werden. Wenn Sie versuchen, eine <b>get&lt;Type&gt;</b>-Methode
					für die gleiche Spalte oder den gleichen Parameter aufzurufen,
					nachdem die <b>get&lt;Type&gt;Stream</b>-Methode des gleichen
					Objekts aufgerufen wurde, wird eine Ausnahme mit der folgenden
					Meldung ausgelöst: "Auf die Daten wurde zugegriffen; sie sind für
					diese Spalte oder diesen Parameter nicht verfügbar."
				</p>
			</div>
			<h1 class="heading">Richtlinien für die Verwendung der adaptiven
				Pufferung</h1>
			<div id="sectionSection2" class="section" name="collapseableSection"
				style="">
				<p>Entwickler sollten sich an diese wichtigen Richtlinien
					halten, um die Speicherauslastung durch die Anwendung zu
					minimieren:</p>
				<ul>
					<li><p>
							Vermeiden Sie die Verwendung der
							Verbindungszeichenfolgeneigenschaft <span sdata="langKeyword"
								value="selectMethod=cursor"><span class="keyword">selectMethod=cursor</span></span>,
							damit die Anwendung ein sehr großes Resultset verarbeiten kann.
							Die adaptive Pufferung ermöglicht Anwendungen, sehr große,
							schreibgeschützte Vorwärtsresultsets ohne die Verwendung eines
							Servercursors zu verarbeiten. Beachten Sie, dass das Festlegen
							von <span sdata="langKeyword" value="selectMethod=cursor"><span
								class="keyword">selectMethod=cursor</span></span> sich auf alle
							schreibgeschützten Resultset mit Vorwärtscursor auswirken, die
							über diese Verbindung generiert werden. Das heißt, wenn die
							Anwendung wiederholt kleine Resultsets mit wenigen Zeilen
							verarbeitet, werden zum Erstellen, Lesen und Schließen eines
							Servercursors für jedes Resultset sowohl auf Clientseite als auch
							auf Serverweite mehr Ressourcen verwendet als bei einer <span
								sdata="langKeyword" value="selectMethod"><span
								class="keyword">selectMethod</span></span>, die auf einen anderen Wert
							als <span sdata="langKeyword" value="cursor"><span
								class="keyword">cursor</span></span> festgelegt ist.
						</p></li>
					<li><p>
							Lesen Sie große Text- oder Binärwerte als Datenströme mithilfe
							der Methoden <b>getAsciiStream</b>, <b>getBinaryStream,</b> oder
							<b>getCharacterStream</b> anstelle der <b>getBlob</b>-Methode
							oder der <b>getClob</b>-Methode. Ab Version 1.2 stellt die <a
								href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>-Klasse
							neue <b>get&lt;Type&gt;Stream</b>-Methoden hierfür bereit.
						</p></li>
					<li><p>
							Stellen Sie sicher, dass Spalten mit potenziell großen Werten in
							der Liste der Spalten in einer SELECT-Anweisung am Ende platziert
							werden und dass die <b>get&lt;Type&gt;Stream</b>-Methoden von <a
								href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>
							verwendet werden, um in der Reihenfolge auf die Spalten
							zuzugreifen, in der sie ausgewählt werden.
						</p></li>
					<li><p>
							Stellen Sie sicher, dass OUT-Parameter mit potenziell großen
							Werten in der Liste der Parameter im SQL zum Erstellen von <a
								href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>
							zuletzt deklariert werden. Stellen Sie außerdem sicher, dass die
							<b>get&lt;Type&gt;Stream</b>-Methoden von <a
								href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>
							verwendet werden, um auf die OUT-Parameter in der Reihenfolge
							zuzugreifen, in der sie deklariert wurden.
						</p></li>
					<li><p>Vermeiden Sie, gleichzeitig mehrere Anweisungen
							über die gleiche Verbindung auszuführen. Das Ausführen einer
							weiteren Anweisung vor dem Verarbeiten der Ergebnisse der
							vorhergehenden Anweisung kann dazu führen, dass nicht
							verarbeitete Ergebnisse im Anwendungsspeicher gepuffert werden.</p></li>
					<li><p>
							In bestimmten Fällen wie den folgenden bietet die Verwendung von
							<span sdata="langKeyword" value="selectMethod=cursor"><span
								class="keyword">selectMethod=cursor</span></span> gegenüber <span
								sdata="langKeyword" value="responseBuffering=adaptive"><span
								class="keyword">responseBuffering=adaptive</span></span> Vorteile:
						</p>
						<ul>
							<li><p>
									Wenn die Anwendung ein schreibgeschütztes Resultset mit
									Vorwärtscursor langsam verarbeitet, z. B. beim Lesen jeder
									Zeile nach einer Benutzereingabe, wird die Ressourcenverwendung
									durch <span sdata="langKeyword" value="selectMethod=cursor"><span
										class="keyword">selectMethod=cursor</span></span> anstelle von <span
										sdata="langKeyword" value="responseBuffering=adaptive"><span
										class="keyword">responseBuffering=adaptive</span></span> SQL Server
									möglicherweise verringert.
								</p></li>
							<li><p>
									Wenn die Anwendung zwei oder mehr schreibgeschützte Resultsets
									mit Vorwärtscursor gleichzeitig für die gleiche Verbindung
									verarbeitet, lässt sich der vom Treiber bei der Verarbeitung
									dieser Resultsets benötigte Speicher durch <span
										sdata="langKeyword" value="selectMethod=cursor"><span
										class="keyword">selectMethod=cursor</span></span> anstelle von <span
										sdata="langKeyword" value="responseBuffering=adaptive"><span
										class="keyword">responseBuffering=adaptive</span></span>
									möglicherweise verringern.
								</p></li>
						</ul>
						<p>In beiden Fällen müssen Sie den zusätzlichen Aufwand des
							Erstellens, Lesens und Schließens der Servercursor
							berücksichtigen.</p></li>
				</ul>
				<p>Darüber hinaus enthält die folgende Liste einige Empfehlungen
					für scrollfähige Resultsets und aktualisierbare Resultsets mit
					Vorwärtscursor:</p>
				<ul>
					<li><p>
							Bei scrollfähigen Resultsets liest der Treiber beim Abrufen eines
							Zeilenblocks immer die von der <a
								href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a>-Methode
							des <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Objekts
							angegebene Anzahl von Zeilen in den Speicher ein, auch bei
							aktivierter adaptiver Pufferung. Wenn das Scrolling einen <b>OutOfMemoryError</b>
							verursacht, können Sie die Anzahl der abgerufenen Zeilen
							verringern, indem Sie die <a
								href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a>-Methode
							des <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Objekts
							aufrufen, um die Abrufgröße auf eine kleinere Zeilenanzahl
							festzulegen und ggf. sogar auf eine Zeile verringern. Führt dies
							immer noch zu einem <b>OutOfMemoryError, </b>vermeiden Sie das
							Einschließen sehr großer Spalten in scrollfähigen Resultsets.
						</p></li>
					<li><p>
							Bei aktualisierbaren Resultsets mit Vorwärtscursor liest der
							Treiber beim Abrufen eines Zeilenblocks normalerweise die von der
							<a href="7bc96930-b0c9-42f6-8df9-1d8d824408b3.htm">getFetchSize</a>-Methode
							des <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Objekts
							angegebene Anzahl von Zeilen in den Speicher ein, auch wenn die
							adaptive Pufferung für die Verbindung aktiviert ist. Wenn das
							Aufrufen der <a href="60248447-6908-4036-a779-a501453cd553.htm">next</a>-Methode
							des <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Objekts
							einen <b>OutOfMemoryError</b> verursacht, können Sie die Anzahl
							der abgerufenen Zeilen verringern, indem Sie die <a
								href="233bf4f8-4758-42d0-a80b-33e34fa78027.htm">setFetchSize</a>-Methode
							des <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>-Objekts
							aufrufen, um die Abrufgröße auf eine kleinere Zeilenanzahl
							festzulegen und ggf. sogar auf eine Zeile verringern. Sie können
							auch erzwingen, dass der Treiber keine Zeilen puffert, indem Sie
							vor dem Ausführen der Anweisung die <a
								href="9f489835-6cda-4c8c-b139-079639a169cf.htm">setResponseBuffering</a>-Methode
							des <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>-Objekts
							mit dem <span sdata="langKeyword" value="adaptive"><span
								class="keyword">adaptive</span></span>-Parameter aufrufen. Da das
							Resultset nicht scrollfähig ist, verwirft der Treiber einen
							großen Spaltenwert, auf den die Anwendung mit einer der <b>get&lt;Type&gt;Stream</b>-Methoden
							zugreift, wie bei schreibgeschützten Resultsets mit
							Vorwärtscursor, sobald er von der Anwendung gelesen wurde.
						</p></li>
				</ul>
			</div>
			<span id="seeAlsoSpan"><h1 class="heading">Siehe auch</h1></span>
			<div id="seeAlsoSection" class="section" name="collapseableSection"
				style="">
				<div class="seeAlsoStyle">
					<span sdata="link"><a
						href="e1592499-b87b-45ee-bab8-beaba8fde841.htm">Verbessern von
							Leistung und Zuverlässigkeit mit dem JDBC-Treiber</a></span>
				</div>
			</div>
		</div>
		<div id="footer" class="section">
			<span id="feedbackarea">Senden Sie Microsoft <a
				href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dVielen%20Dank%20für%20Ihr%20Feedback.%20Die%20Autorenteams%20im%20Bereich%20Entwicklung%20nutzen%20Ihr%20Feedback,%20um%20die%20Dokumentation%20zu%20verbessern.%20Im%20Rahmen%20der%20Überprüfung%20Ihres%20Feedbacks%20erhalten%20Sie%20von%20uns%20ggf.%20eine%20E-Mail%20mit%20Rückfragen%20oder%20Feedback%20zur%20möglichen%20Lösung.%20Ihre%20E-Mail-Adresse%20wird%20von%20uns%20nicht%20zu%20anderen%20Zwecken%20verwendet%20und%20wird%20gelöscht,%20sobald%20die%20Überprüfung%20Ihres%20Feedbacks%20abgeschlossen%20ist.%0\AWeitere%20Informationen%20zu%20den%20Datenschutzrichtlinien%20von%20Microsoft%20finden%20Sie%20unter%20http://privacy.microsoft.com/de-de/default.aspx.%0\A%0\d','Kundenfeedback');">Feedback</a>
				zu diesem Thema.
			</span><span id="copyrightarea"><p>
					<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012
						Microsoft. Alle Rechte vorbehalten.</a>
				</p></span>
		</div>
	</div>
</body>
</html>