<html xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:MSHelp="http://msdn.microsoft.com/mshelp"
	xmlns:mshelp="http://msdn.microsoft.com/mshelp"
	xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5"
	xmlns:msxsl="urn:schemas-microsoft-com:xslt">
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
<META NAME="save" CONTENT="history" />
<title>Verwenden von gespeicherten Prozeduren mit
	Ausgabeparametern</title>
<meta name="Language" content="de-de" />
<meta name="Microsoft.Help.Id"
	content="1c006f27-7e99-43d5-974c-7b782659290c" />
<meta name="Description"
	content="Eine aufrufbare gespeicherte SQL Server-Prozedur gibt mindestens einen OUT-Parameter zurück, mit dem die gespeicherte Prozedur Daten an die aufrufende Anwendung zurückgibt." />
<meta name="Microsoft.Help.ContentType" content="Concepts" />
<link rel="stylesheet" type="text/css" href="../local/Classic.css" />
<script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script>
<script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script>
<script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script>
</head>
<body>
	<div id="header">
		<table id="bottomTable" cellpadding="0" cellspacing="0">
			<tr>
				<td align="left"><span id="headerBold">Verwenden von
						gespeicherten Prozeduren mit Ausgabeparametern</span></td>
			</tr>
		</table>
		<table id="gradientTable">
			<tr>
				<td class="nsrBottom" background="../icons/gradient.gif" />
			</tr>
		</table>
	</div>
	<div id="mainSection">
		<div id="mainBody">
			<div class="introduction">
				<p>
					Eine aufrufbare gespeicherte SQL Server-Prozedur gibt mindestens
					einen OUT-Parameter zurück, mit dem die gespeicherte Prozedur Daten
					an die aufrufende Anwendung zurückgibt. Microsoft JDBC Driver für
					SQL Server enthält die <a
						href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>-Klasse,
					mit der Sie diese Art von gespeicherter Prozedur aufrufen und die
					zurückgegebenen Daten verarbeiten können.
				</p>
				<p>
					Wenn Sie diese Art von gespeicherter Prozedur mit dem JDBC-Treiber
					aufrufen, müssen Sie die <span class="code"> call </span>-SQL-Escapesequenz
					zusammen mit der <a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a>-Methode
					der <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a>-Klasse
					verwenden. Die Syntax für die <span class="code">call</span>-Escapesequenz
					mit OUT-Parameter lautet wie folgt:
				</p>
				<p>
					<span class="code">{call
						procedure-name[([parameter][,[parameter]]...)]}</span>
				</p>
				<div style="margin: .5em 1.5em .5em 1.5em">
					<b></b>
					<p>
						Weitere Informationen zu SQL-Escapesequenzen finden Sie unter <span
							sdata="link"><a
							href="00f9e25a-088e-4ac6-aa75-43eacace8f03.htm">Verwenden von
								SQL-Escapesequenzen</a></span>.
					</p>
				</div>
				<p>
					Geben Sie die OUT-Parameter beim Erstellen der<span class="code">
						call </span>-Escapesequenz mit dem Fragezeichen (?) an. das als
					Platzhalter für die Parameterwerte fungiert, die von der
					gespeicherten Prozedur zurückgegeben werden. Um einen Wert für
					einen OUT-Parameter anzugeben, müssen Sie vor dem Ausführen der
					gespeicherten Prozedur den Typ der einzelnen Parameter mit der <a
						href="82f8d608-efc1-4af8-a985-ec25d19420aa.htm">registerOutParameter</a>-Methode
					der <b>SQLServerCallableStatement</b>-Klasse angeben.
				</p>
				<p>
					Bei dem Wert, den Sie für den OUT-Parameter in der <b>registerOutParameter</b>-Methode
					angeben, muss es sich um einen der in <b>java.sql.Types</b>
					enthaltenen JDBC-Datentypen handeln, der wiederum einem der
					systemeigenen SQL Server-Datentypen zugeordnet wird. Weitere
					Informationen zu den JDBC- und SQL Server-Datentypen finden Sie
					unter <span sdata="link"><a
						href="7802328d-4d23-4775-9573-4169b127d258.htm">Grundlegendes
							zu den Datentypen in JDBC Driver</a></span>.
				</p>
				<p>
					Wenn Sie an die <b>registerOutParameter</b>-Methode einen Wert für
					einen OUT-Parameter übergeben, müssen Sie nicht nur den für den
					Parameter zu verwendenden Datentyp angeben, sondern auch die
					ordinale Position des Parameters oder den Namen des Parameters der
					gespeicherten Prozedur. Wenn die gespeicherte Prozedur
					beispielsweise einen einzigen OUT-Parameter enthält, ist der
					Ordinalwert 1. Wenn die gespeicherte Prozedur zwei Parameter
					enthält, ist der erste Ordinalwert 1 und der zweite Ordinalwert 2.
				</p>
				<div style="margin: .5em 1.5em .5em 1.5em">
					<b></b>
					<p>Die Verwendung der SQL Server-Datentypen CURSOR, SQLVARIANT,
						TABLE und TIMESTAMP für OUT-Parameter wird vom JDBC-Treiber nicht
						unterstützt.</p>
				</div>
				<p>Erstellen Sie als Beispiel die folgende Prozedur in der SQL
					Server 2005 AdventureWorks-Beispieldatenbank:</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>CREATE PROCEDURE GetImmediateManager
   @employeeID INT,
   @managerID INT OUTPUT
AS
BEGIN
   SELECT @managerID = ManagerID 
   FROM HumanResources.Employee 
   WHERE EmployeeID = @employeeID
END</pre></span>
				</div>
				<p>Diese gespeicherte Prozedur gibt abhängig vom angegebenen
					IN-Parameter "employeeID" (ein integer-Wert) einen einzigen
					OUT-Parameter "managerID" zurück (ebenfalls ein integer-Wert). Bei
					dem im OUT-Parameter zurückgegebenen Wert handelt es sich um die
					auf "EmployeeID" basierende "ManagerID", die in der Tabelle
					"HumanResources.Employee" enthalten ist.</p>
				<p>
					Im folgenden Beispiel werden eine offene Verbindung zur
					AdventureWorks-Beispieldatenbank an die Funktion übergeben und die
					gespeicherte Prozedur "GetImmediateManager" mit der <a
						href="e1367f39-23d7-4e26-b160-6d988d7e6988.htm">execute</a>-Methode
					aufgerufen:
				</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt(1, 5);
      cstmt.registerOutParameter(2, java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt(2));
   }
   catch (Exception e) {
      e.printStackTrace();
   }
}</pre></span>
				</div>
				<p>In diesem Beispiel werden die Ordnungspositionen verwendet,
					um die Parameter zu identifizieren. Alternativ können Sie einen
					Parameter mit seinem Namen anstelle der Ordnungsposition
					identifizieren. Im folgenden Codebeispiel wird das vorhergehende
					Beispiel geändert, um die Verwendung von benannten Parametern in
					einer Java-Anwendung zu veranschaulichen. Beachten Sie, dass die
					Parameternamen den Parameternamen in der Definition der
					gespeicherten Prozedur entsprechen:</p>
				<div class="sampleCode">
					<span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt("employeeID", 5);
      cstmt.registerOutParameter("managerID", java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt("managerID"));
      cstmt.close();
   }
   catch (Exception e) {
      e.printStackTrace();
   }</pre></span>
				</div>
				<p>}</p>
				<div style="margin: .5em 1.5em .5em 1.5em">
					<b></b>
					<p>
						In diesen Beispielen wird die <b>execute</b>-Methode der <b>SQLServerCallableStatement</b>-Klasse
						verwendet, um die gespeicherte Prozedur auszuführen. da von der
						gespeicherten Prozedur nicht auch ein Resultset zurückgegeben
						wurde. Andernfalls müsste die <a
							href="599cf463-e19f-4baa-bacb-513cad7c6cd8.htm">executeQuery</a>-Methode
						verwendet werden.
					</p>
				</div>
				<p>
					Gespeicherte Prozeduren können Updatezählungen und mehrere
					Resultsets zurückgeben. Microsoft JDBC Driver für SQL Server folgt
					der JDBC 3.0-Spezifikation, der zufolge mehrere Resultsets und
					Updatezählungen abgerufen werden müssen, bevor die OUT-Parameter
					abgerufen werden. Dies bedeutet, dass die Anwendung alle <b>ResultSet</b>-Objekte
					und Updatezählungen abrufen sollte, bevor die OUT-Parameter mit den
					<b>CallableStatement.getter</b>-Methoden abgerufen werden.
					Andernfalls gehen die noch nicht abgerufenen <b>ResultSet</b>-Objekte
					und Updatezählungen verloren, wenn die OUT-Parameter abgerufen
					werden. Weitere Informationen zu Updatezählungen und mehreren
					Resultsets finden Sie unter <span sdata="link"><a
						href="64cf4877-5995-4bfc-8865-b7618a5c8d01.htm">Verwenden von
							gespeicherten Prozeduren mit einer Updatezählung</a></span> und <span
						sdata="link"><a
						href="ab6a3cfa-073b-44e9-afca-a8675cfe5fd1.htm">Verwenden von
							mehreren Resultsets</a></span>
				</p>
			</div>
			<span id="seeAlsoSpan"><h1 class="heading">Siehe auch</h1></span>
			<div id="seeAlsoSection" class="section" name="collapseableSection"
				style="">
				<div class="seeAlsoStyle">
					<span sdata="link"><a
						href="0041f9e1-09b6-4487-b052-afd636c8e89a.htm">Verwenden von
							Anweisungen mit gespeicherten Prozeduren</a></span>
				</div>
			</div>
		</div>
		<div id="footer" class="section">
			<span id="feedbackarea">Senden Sie Microsoft <a
				href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dVielen%20Dank%20für%20Ihr%20Feedback.%20Die%20Autorenteams%20im%20Bereich%20Entwicklung%20nutzen%20Ihr%20Feedback,%20um%20die%20Dokumentation%20zu%20verbessern.%20Im%20Rahmen%20der%20Überprüfung%20Ihres%20Feedbacks%20erhalten%20Sie%20von%20uns%20ggf.%20eine%20E-Mail%20mit%20Rückfragen%20oder%20Feedback%20zur%20möglichen%20Lösung.%20Ihre%20E-Mail-Adresse%20wird%20von%20uns%20nicht%20zu%20anderen%20Zwecken%20verwendet%20und%20wird%20gelöscht,%20sobald%20die%20Überprüfung%20Ihres%20Feedbacks%20abgeschlossen%20ist.%0\AWeitere%20Informationen%20zu%20den%20Datenschutzrichtlinien%20von%20Microsoft%20finden%20Sie%20unter%20http://privacy.microsoft.com/de-de/default.aspx.%0\A%0\d','Kundenfeedback');">Feedback</a>
				zu diesem Thema.
			</span><span id="copyrightarea"><p>
					<a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012
						Microsoft. Alle Rechte vorbehalten.</a>
				</p></span>
		</div>
	</div>
</body>
</html>